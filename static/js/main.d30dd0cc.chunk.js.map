{"version":3,"sources":["components/IntroPage/AskNameModal.js","components/IntroPage/IntroPage.js","components/NavBar.js","components/TutorialBox.js","components/Purchase.js","components/PurchaseMenuBox.js","components/GameInfoCardText.js","components/GameInfoModal.js","components/ImagesOfBuildings.js","components/BuildingsArea/BuildingSquare.js","components/BuildingsArea/BuildingsField.js","components/GameBuildingField.js","components/BuildingUpgradeCard.js","components/GameModal.js","components/AskIfExitModal.js","App.js","index.js"],"names":["AskNameModal","onGetName","useState","playersName","setName","className","onSubmit","e","preventDefault","htmlFor","type","id","name","maxLength","placeholder","value","onChange","target","IntroPage","onGotIt","introTexts","introText","setIntroText","state","setState","existsPreviousText","setExistancePrevText","existsNextText","setExistanceNextText","showPreviousBtn","setShowPreviousBtn","showNextBtn","setShowNextBtn","toggleIntroText","val","length","NewlineText","props","text","split","map","str","Math","random","src","alt","href","rel","size","color","onClick","disabled","defaultProps","NavBar","place","delayUpdate","data-delay-show","data-tip","assets","villagers","knights","archers","autoComplete","defaultChecked","onSetDefaultTimeSpeed","days","onSetDoubleTimeSpeed","lumber","stone","iron","gold","TutorialBox","iconSize","tutorialBoxTexts","image","tutorialBoxText","setTutorialBoxText","tutorialBoxImage","setTutorialBoxImage","toggleTutorialText","handleClickEvent","Purchase","purchase","show","tooltip","icon1","icon2","title","workersNeeded","priceInGold","priceInWood","priceInStone","priceInIron","PurchaseMenuBox","canBuildArchersAcademy","setCanBuildArchersAcademy","canBuildKnightsAcademy","setCanBuildKnightsAcademy","errorMessage","setErrorMessage","enoughResources","setEnoughResources","selectedPurchase","setSelectedPurchase","setBuildingPurchased","building","buildingId","onCheckIfHasBuildings","checkForResources","onBuild","useEffect","selectedBuildingArea","purchases","purchaseId","onClose","GameInfoCardText","iconsSize","lostWarriors","lostBattleGold","lostBattleKnights","lostBattleArchers","productionInfo","productionPerDay","goldPerDay","lumberPerDay","stonePerDay","ironPerDay","wonBattle","wonBattleGold","toFixed","replace","lostBattle","icon","icons","header","secondText","thirdText","Backdrop","selectedInfoTypeId","onCloseModal","ModalOverlay","formatNumber","number","defenseStrength","goldTillWin","warriorstillWin","enemyAtackStrength","strengthOfEnemy","getDaysTillAttack","Fragment","battlesWon","gameInfoTypes","setGameInfoTypes","infoType","daysTillAttack","filteredgameInfo","filter","gamePlay","proceedGame","onPlayAgain","onExitGame","GameInfoModal","ReactDOM","createPortal","document","getElementById","warriors","ImagesOfBuildings","imageSize","biggerImageSize","secondImageSize","smallerImageSize","biggerIconColor","buildinId","getBuildingImage","BuildingSquare","selected","onSelectHandler","BuildingsField","field","fields","GameBuildingField","buildingAreas","onClickEventHandler","BuildingUpgradeCard","displayUpgradeBtn","buildingUpgraded","setBuildingUpgraded","setNumber","incrementorForPrice","setIncrementorForPrice","isForge","setIsForge","cannotDestroyHouse","setCannotDestroyHouse","canTrain","setCanTrain","warriorImage","toolTipWarriorStrength","selectedBuildingType","group","buildingArea","buildingTitle","prevNo","values","floor","minValue","min","apply","o","checkIfHasBuilding","onTrainWarriors","selectedBuildingText","selectedBuildingGroup","selectedBuildingLevel","checkForResourcesToUpgrade","onUpgrade","checkIfCanDestroyHouse","onDestroyBuilding","GameModal","goldProvidedByHouse","goldProvidedByHut","defaultTimeSpeed","setStrengthOfEnemy","setDaysTillAttack","setBattlesWon","showGameInfoModal","setGameInfoModal","showPurchaseMenu","setShowPurchaseMenu","showBuildingUpgrade","setShowBuildingUpgrade","showWelcomeModal","setShowWelcomeModal","level1text","level2text","setPurchases","isFieldSelected","setIsFieldSelected","hasBuilding","setHasBuilding","buildingLevel","setB","setSelectedInfoTypeId","setSelectedBuildingType","setSelectedBuildingLevel","setSelectedBuildingArea","setSelectedBuildingGroup","selectedBuildingTitle","setSelectedBuildingTitle","setSelectedBuildingText","setAssets","buildingType","neededBuilding","buildingNeeded","proceedCheck","forEach","element","findIndex","obj","closePurchaseBox","setPurchasegroup","handleDeselectFieldEvent","indexOfSelected","deselectField","setBuildingText","indexOfSelectedBuilding","selectedField","setBuildingTitle","handleGameInfoTypeSelection","updateProductionPerDay","checkIfEnoughResourcesToBuy","incrementor","villagersNeeded","countDays","setCountDays","timeSpeed","setTimeSpeed","countProduction","production","building1Lev","item","building2Lev","setProductionPerDay","products","setGamePlay","calculateDefenseStrength","setWonBattleGold","setLostBattleGold","setLostBattleKnights","setLostBattleArchers","lossesAfterBattle","statusOfBattle","severityMultiplier","severityOfLoss","lostGold","parseInt","asset","severityMultiplierKnights","severityMultiplierArchers","wonBattleLostKnights","wonBattleLostArchers","earnedGold","severityOfWin","checkIfEnemyAttackDay","prev","checkIfWonBattle","initGameGoing","hutsProduction","housesProduction","lumberProduction","stoneProduction","ironProduction","updateResources","calculateStrengthOfEnemy","strength","calculateDaysTillAttack","daysTillAttackCalculated","setInterval","clearInterval","handleCloseWelcomeModal","window","location","reload","updatedHousePeople","villagersCount","amount","deductor","hutPeopleCount","bigHousesPeopleCount","area","workersIncrementor","onShowExitModal","AskIfExitModal","onGetAnswer","onSetAnswer","answer","App","showIntroModal","setShowIntroModal","showGameModal","setShowGameModal","showAskNameModal","setAskNameModal","setPlayersName","showAskIfExitModal","setShowExitModal","player","trim","render","StrictMode"],"mappings":"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AoBC,GAApB,MACA,GAA8B9O,mBAAS,CACrC,CACES,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,EACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GAAI,GACJI,MAAO,EACPiK,UAAU,EACVvE,UAAW,EACXwI,cAAe,EACfzC,MAAO,IAET,CACE7L,GA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","file":"static/js/main.d30dd0cc.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst AskNameModal = ({onGetName}) => {\r\n  const [playersName, setName] = useState('')\r\n\r\n  const onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      onGetName({playersName});\r\n      setName('');\r\n  }\r\n  return (\r\n    <div className='containerModal askUserBox'>\r\n      <form className='d-flex flex-wrap justify-content-center' onSubmit={onSubmit}>\r\n        <label className='p-4' htmlFor=\"userName\">\r\n          Good day, dear player! I would like to know how should I call you\r\n        </label>\r\n        <input type=\"text\" \r\n          className='w-100 mx-4' \r\n          id=\"userName\" \r\n          name=\"userName\" \r\n          maxLength=\"15\" \r\n          placeholder='Your name'\r\n          value={playersName}\r\n          onChange={(e) => setName(e.target.value)}/>\r\n        <br />\r\n        <br />\r\n        <input type=\"submit\" className='m-4 btn btn-dark btn-sm ' value=\"OK!\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AskNameModal;\r\n","import { useState } from \"react\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\n\r\nconst IntroPage = ({ playersName, onGotIt }) => {\r\n  const introTexts = [\r\n    `In this strategy game You will be able to show your strategy skills! Build or destroy buildings, train villagers to become warriors to defend your Village. \\nTo win the game You need to collect 1,000,000 gold, or to train 10,000 warriors. \\nEvery Hut and House will provide you some gold as well as every won battle. \\nBe aware of the enemies and be prepared for every siege.`,\r\n    `Hope You will enjoy and win the game! \\nSo, good luck to You ${playersName}! \\n P.S. Please do not hesitate to write me if any errors occured during the game, or if You have any suggestions to improve the game. You can write me gvidaspilelis@gmail.com or find me on: `,\r\n    `Special Thank You goes to: \"React Icons\" for the icons from the \"game icons\" project, license CC BY 3.0, for the icons from the \"atisawd/boxicons\"    project, license CC BY 4.0 License, for the icons from the \"fontawesome\" project license CC BY 4.0 License, \"Weateher Icons\" for the icons, license SIL OFL 1.1.`,\r\n  ];\r\n  const [introText, setIntroText] = useState(introTexts[0]);\r\n  const [state, setState] = useState(0);\r\n  const [existsPreviousText, setExistancePrevText] = useState(false);\r\n  const [existsNextText, setExistanceNextText] = useState(true);\r\n  const [showPreviousBtn, setShowPreviousBtn] = useState(false);\r\n  const [showNextBtn, setShowNextBtn] = useState(true);\r\n\r\n  function toggleIntroText(val) {\r\n    if (state <= 0 && val < 0) {\r\n      setExistancePrevText(false);\r\n      return;\r\n    }\r\n    if (state >= introTexts.length - 1 && val > 0) {\r\n      setExistanceNextText(false);\r\n      return;\r\n    }\r\n    if(state + val === 0) {\r\n      setExistancePrevText(false);\r\n      setShowPreviousBtn(false);\r\n      setShowNextBtn(true);\r\n    } else {\r\n      setExistancePrevText(true);\r\n      setShowPreviousBtn(true);\r\n      setShowNextBtn(true);\r\n    }\r\n\r\n    if(state + val === 2) {\r\n      setExistanceNextText(false);\r\n      setShowPreviousBtn(true);\r\n      setShowNextBtn(false);\r\n    } else {\r\n      setExistanceNextText(true);\r\n    }\r\n\r\n    setState(state + val);\r\n    setIntroText(introTexts[state + val]);\r\n  }\r\n\r\n  function NewlineText(props) {\r\n    const text = props.text;\r\n    return text.split(\"\\n\").map((str) => <p key={Math.random()}>{str}</p>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"containerModal tutorialModal\">\r\n      <div className=\"introImage\">\r\n        <img src=\"https://gvidasgvd.github.io/strategy-survival-game/images/introPersonImg.PNG\" alt=\"Ancient person drawing\" />\r\n        {/* <img alt=\"Ancient person drawing\" /> */}\r\n      </div>\r\n      <div className=\"introTextBox d-flex justify-content-end align-content-between flex-wrap p-4\">\r\n        <div className=\"d-flex flex-wrap w-100 text-align-center \">\r\n          <h3 className=\"pl-5 w-100\">Hello {playersName},</h3>\r\n          <div className=\"mt-4 introTextField\">\r\n            <NewlineText text={introText} />\r\n            {state === 1 ? (\r\n              <div>\r\n                <a\r\n                  href=\"https://www.linkedin.com/feed/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  \r\n                >\r\n                  <FaLinkedin size=\"3.2em\" color=\"blue\" className=\"linkedin-link\"/>\r\n                </a>\r\n                <p className=\"mt-3 white-text\">You can find my other works here: </p>\r\n                <div className=\"GP-link-box\"><a href=\"https://gvidasgvd.github.io/portfolioPage.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"GP-link\">GP</a></div>\r\n              </div>\r\n            ) : null}\r\n            {state === 2 ? (\r\n              <div className=\"d-flex flex-wrap\">\r\n\r\n                <p className=\"mt-3 white-text w-100\">Links: </p><br></br>\r\n                <a\r\n                className=\"icons-links\"\r\n                  href=\"https://react-icons.github.io/react-icons/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >https://react-icons.github.io/react-icons/\r\n                </a>\r\n                <a\r\n                className=\"icons-links\"\r\n                  href=\"https://game-icons.net/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >https://game-icons.net/\r\n                </a>\r\n                <a\r\n                className=\"icons-links\"\r\n                  href=\"https://github.com/atisawd/boxicons\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >https://github.com/atisawd/boxicons\r\n                </a>\r\n                <a\r\n                className=\"icons-links\"\r\n                  href=\"https://fontawesome.com/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >https://fontawesome.com/\r\n                </a>\r\n                <a\r\n                className=\"icons-links\"\r\n                  href=\"https://erikflowers.github.io/weather-icons/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >https://erikflowers.github.io/weather-icons/\r\n                </a>\r\n                \r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"m-5\">\r\n          {showPreviousBtn && <button\r\n            className=\"introBtnPrevious btn btn-dark btn-sm mr-1\"\r\n            onClick={() => toggleIntroText(-1)}\r\n            disabled={!existsPreviousText}\r\n          >\r\n            Previous\r\n          </button>}\r\n          {showNextBtn && <button\r\n            className=\"introBtnNext btn btn-dark btn-sm mx-1\"\r\n            onClick={() => toggleIntroText(+1)}\r\n            disabled={!existsNextText}\r\n          >\r\n            Next\r\n          </button>}\r\n          \r\n          <button className=\"btn btn-dark btn-sm ml-1 mt-0\" onClick={onGotIt}>\r\n            {\" \"}\r\n            Got it!{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nIntroPage.defaultProps = {\r\n  playersName: \"Nice Player\",\r\n};\r\n\r\nexport default IntroPage;\r\n","import ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  GiTwoCoins,\r\n  GiMetalBar,\r\n  GiWoodPile,\r\n  GiStoneStack,\r\n  GiSwordman,\r\n  GiBowman,\r\n  GiRomanToga,\r\n} from \"react-icons/gi\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const NavBar = (props) => {\r\n  return (\r\n    <div>\r\n      <ReactTooltip place=\"bottom\" delayUpdate={1000} />\r\n      <div className=\"navBar\">\r\n        {/* <span data-delay-show=\"400\" data-tip=\"Happiness of your people\">\r\n          <FaRegGrinBeam size=\"1.2em\" /> {props.assets[0].happinessOfVillagers}%\r\n        </span> */}\r\n        <div className=\"nav-bar-people-block\">\r\n          <span\r\n            className=\"nav-bar-people\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Villagers\"\r\n          >\r\n            <GiRomanToga size=\"1.2em\" /> {props.assets[0].villagers}\r\n          </span>\r\n          <span\r\n            className=\"nav-bar-people\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Knights\"\r\n          >\r\n            <GiSwordman size=\"1.2em\" />\r\n            {props.assets[0].knights}\r\n          </span>\r\n          <span\r\n            className=\"nav-bar-people\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Archers\"\r\n          >\r\n            <GiBowman size=\"1.2em\" />\r\n            {props.assets[0].archers}\r\n          </span>\r\n        </div>\r\n        <div className=\"nav-bar-time\">\r\n          {\" \"}\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"options\"\r\n            id=\"option1\"\r\n            autoComplete=\"off\"\r\n            defaultChecked\r\n          />\r\n          <label\r\n            className=\"btn btn-secondary mx-3 btn-set-timespeed\"\r\n            htmlFor=\"option1\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Set to default time speed\"\r\n            onClick={props.onSetDefaultTimeSpeed}\r\n          >\r\n            x 1\r\n          </label>\r\n          <div className=\"nav-bar-time-days w-100\">\r\n            <span className=\"w-50 pl-1 nav-bar-time-days-label\">Days</span>\r\n            <span className=\"w-50 nav-bar-time-days-number pr-1\">\r\n              {props.days}\r\n            </span>\r\n          </div>\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"options\"\r\n            id=\"option2\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <label\r\n            className=\"btn btn-secondary mx-3 btn-set-timespeed\"\r\n            htmlFor=\"option2\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Set double time speed\"\r\n            onClick={props.onSetDoubleTimeSpeed}\r\n          >\r\n            x 2\r\n          </label>\r\n        </div>\r\n        <div className=\"nav-bar-resources-block\">\r\n          <span\r\n            className=\"nav-bar-resources\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Lumber\"\r\n          >\r\n            <GiWoodPile size=\"1.5em\" color=\"rgb(236 171 51)\" />\r\n            {props.assets[0].lumber}\r\n          </span>\r\n          <span\r\n            className=\"nav-bar-resources\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Stone\"\r\n          >\r\n            <GiStoneStack size=\"1.5em\" color=\"grey\" />\r\n            {props.assets[0].stone}\r\n          </span>\r\n          <span\r\n            className=\"nav-bar-resources\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Iron\"\r\n          >\r\n            <GiMetalBar size=\"1.2em\" />\r\n            {props.assets[0].iron}\r\n          </span>\r\n          <span\r\n            className=\"nav-bar-resources\"\r\n            data-delay-show=\"400\"\r\n            data-tip=\"Gold\"\r\n          >\r\n            <GiTwoCoins size=\"1.2em\" color=\"yellow\" />\r\n            {props.assets[0].gold}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { GiCrossedSwords, GiSandsOfTime, GiBrokenShield, GiBowman, GiRomanToga} from \"react-icons/gi\";\r\nimport { FaTrophy } from \"react-icons/fa\";\r\nimport { WiSunrise } from \"react-icons/wi\";\r\n\r\n\r\nconst TutorialBox = (props) => {\r\n  const iconSize = \"2.5em\";\r\n  const tutorialBoxTexts = [\r\n    {\r\n      text: \"Please be aware that any time enemies can attack You! Train Your village people to become strong Knights and Archers. You can check for any nearby enemies by clicking: \",\r\n      image: <GiCrossedSwords size={iconSize} color=\"grey\" />,\r\n    },\r\n    {\r\n      text: \"If You are curious of your achievements, You can check Your current game status by clicking: \",\r\n      image: <FaTrophy size={iconSize} color=\"grey\" />,\r\n    },\r\n    {\r\n      text: \"If Enemy is stronger than You more than twice, You will be defeated! So make sure that your defense strength is not less then the half of the Enemy's attack strength\",\r\n      image: <GiBrokenShield size={iconSize} color=\"grey\" />,\r\n    },\r\n    {\r\n      text: \"Your villagers can defend the Village too! Each villager has the defense strength of 1\",\r\n      image: <GiRomanToga size={iconSize} color=\"grey\" />,\r\n    },\r\n    {\r\n      text: \"Archers are 3 times stronger than knights and more often survive the battles\",\r\n      image: <GiBowman size={iconSize} color=\"grey\" />,\r\n    },\r\n    {\r\n      text: \"You can control the game speed by choosing the tempo of the game in the upper navigation bar\",\r\n      image: <GiSandsOfTime size={iconSize} color=\"grey\" />,\r\n    },\r\n    {\r\n      text: \"The game success depends only on You! Believe in Yourself and never give up!\",\r\n      image: <WiSunrise size=\"3em\" color=\"grey\" />,\r\n    },\r\n  ];\r\n  const [state, setState] = useState(() => 0);\r\n  const [tutorialBoxText, setTutorialBoxText] = useState(\r\n    tutorialBoxTexts[0].text\r\n  );\r\n  const [tutorialBoxImage, setTutorialBoxImage] = useState(\r\n    tutorialBoxTexts[0].image\r\n  );\r\n\r\n  function toggleTutorialText(val) {\r\n    if(state <= 0 && val < 0) {\r\n      setTutorialBoxText(tutorialBoxTexts[tutorialBoxTexts.length - 1].text)\r\n      setTutorialBoxImage(tutorialBoxTexts[tutorialBoxTexts.length - 1].image)\r\n      setState(tutorialBoxTexts.length - 1);\r\n      return\r\n    }\r\n    if(state >= tutorialBoxTexts.length - 1 && val > 0){\r\n      setTutorialBoxText(tutorialBoxTexts[0].text)\r\n      setTutorialBoxImage(tutorialBoxTexts[0].image)\r\n      setState(0);\r\n      return\r\n    }\r\n    setState(state + val);\r\n    setTutorialBoxText(tutorialBoxTexts[state + val].text)\r\n    setTutorialBoxImage(tutorialBoxTexts[state + val].image)\r\n  }\r\n\r\n  const handleClickEvent = () => {\r\n    props.handleClickEvent();\r\n  }\r\n  return (\r\n    <div className=\"leftUpperBox d-flex flex-wrap p-2\" onClick={handleClickEvent}>\r\n      <div className=\"tutorialBoxText w-100\">\r\n        <p className=\"tutorialBoxTextField text-center\">{tutorialBoxText}</p>\r\n        <p className=\"text-center\">{tutorialBoxImage}</p>\r\n      </div>\r\n      <div className=\"tutorialBoxTextNav d-flex w-100 justify-content-end align-items-end\">\r\n        <button\r\n          className=\"introBtnPrevious btn btn-dark btn-sm mr-2 p-2\"\r\n          onClick={() => toggleTutorialText(-1)}\r\n        >\r\n          &laquo;\r\n        </button>\r\n        <button\r\n          className=\"introBtnNext btn btn-dark btn-sm mr-3 p-2\"\r\n          onClick={() => toggleTutorialText(+1)}\r\n        >\r\n          &raquo;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialBox;\r\n","import ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  GiTwoCoins,\r\n  GiMetalBar,\r\n  GiWoodPile,\r\n  GiStoneStack,\r\n  GiRomanToga,\r\n} from \"react-icons/gi\";\r\nconst Purchase = (props) => {\r\n\r\n  const clickHandler = () => {\r\n    props.onClick(props.purchase);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      {props.purchase.show && (\r\n        <div\r\n          onClick={clickHandler}\r\n          className=\"d-flex flex-wrap p-3 mx-3 my-2 purchase-box\"\r\n        >\r\n      <ReactTooltip place=\"bottom\" delayUpdate={1000} />\r\n          <div\r\n            className=\"d-flex flex-wrap w-100 justify-content-center mb-1\"\r\n            \r\n          >\r\n            <span data-delay-show=\"100\"\r\n            data-tip={props.purchase.tooltip}>{props.purchase.icon1}</span>\r\n            <span>{props.purchase.icon2}</span>\r\n            \r\n            <span className=\"w-100 text-center p-1\">{props.purchase.title}</span>\r\n          </div>\r\n          <span\r\n            className=\"w-100 text-center\"\r\n            data-delay-show=\"100\"\r\n            data-tip={props.purchase.tooltip}\r\n          >\r\n            {props.purchase.text}\r\n          </span>\r\n          <div className=\"d-flex justify-content-around w-100\">\r\n            <span data-delay-show=\"400\" data-tip=\"Villagers\">\r\n              <GiRomanToga size=\"1.2em\" /> {props.purchase.workersNeeded}\r\n            </span>\r\n            <span data-delay-show=\"400\" data-tip=\"Gold\">\r\n              <GiTwoCoins size=\"1.2em\" color=\"yellow\" />{\" \"}\r\n              {props.purchase.priceInGold}\r\n            </span>\r\n          </div>\r\n          <div className=\"d-flex justify-content-around w-100\">\r\n            <span data-delay-show=\"400\" data-tip=\"Lumber\">\r\n              <GiWoodPile size=\"1.5em\" color=\"rgb(236 171 51)\" />{\" \"}\r\n              {props.purchase.priceInWood}\r\n            </span>\r\n            {props.purchase.priceInStone ? (\r\n              <span data-delay-show=\"400\" data-tip=\"Stone\">\r\n                <GiStoneStack size=\"1.5em\" color=\"grey\" />{\" \"}\r\n                {props.purchase.priceInStone}\r\n              </span>\r\n            ) : null}\r\n            {props.purchase.priceInIron ? (\r\n              <span data-delay-show=\"400\" data-tip=\"Iron\">\r\n                <GiMetalBar size=\"1.2em\" /> {props.purchase.priceInIron}\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Purchase;\r\n","import Purchase from \"./Purchase\";\r\nimport { useState, useEffect } from \"react\";\r\nconst PurchaseMenuBox = (props) => {\r\n  const [canBuildArchersAcademy, setCanBuildArchersAcademy] = useState(true);\r\n  const [canBuildKnightsAcademy, setCanBuildKnightsAcademy] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [enoughResources, setEnoughResources] = useState(true);\r\n  const [selectedPurchase, setSelectedPurchase] = useState(-1);\r\n\r\n  const closePurchaseBox = () => {\r\n    props.onClose();\r\n  };\r\n\r\n  const checkIfEnoughResources = (buildingId) => {\r\n    return props.checkForResources(buildingId, 1);\r\n  };\r\n  const setBuildingPurchased = (building) => {\r\n    setSelectedPurchase(building.id);\r\n    if (building.id === 3) {\r\n      setCanBuildArchersAcademy(true);\r\n      if (!props.onCheckIfHasBuildings(building.id)) {\r\n        setErrorMessage(\"Firstly build Armor and Swords Forges\");\r\n        setCanBuildKnightsAcademy(false);\r\n      }\r\n    }\r\n\r\n    if (building.id === 4) {\r\n      if (!props.onCheckIfHasBuildings(building.id)) {\r\n        setErrorMessage(\"Firstly build Armor and Arrows Forges\");\r\n        setCanBuildArchersAcademy(false);\r\n      } \r\n        setCanBuildKnightsAcademy(true);\r\n    }\r\n\r\n    if (checkIfEnoughResources(building.id)) {\r\n      props.onBuild(building);\r\n      setEnoughResources(true);\r\n    } else {\r\n      setEnoughResources(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setErrorMessage(\"\");\r\n    setEnoughResources(true);\r\n    setCanBuildArchersAcademy(true);\r\n    setCanBuildKnightsAcademy(true);\r\n  }, [props.selectedBuildingArea, props.purchases]);\r\n\r\n  const errorMessages = (purchaseId) => {\r\n    return (\r\n      <div>\r\n        {!canBuildArchersAcademy && selectedPurchase === purchaseId && (\r\n          <div className={`errorMessage mx-3 my-1`}>{errorMessage}</div>\r\n        )}\r\n        {!canBuildKnightsAcademy && selectedPurchase === purchaseId && (\r\n          <div className={`errorMessage mx-3 my-1`}>{errorMessage}</div>\r\n        )}\r\n        {!enoughResources && selectedPurchase === purchaseId && (\r\n          <div className={`errorMessage mx-3`}>Not enough resources</div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"leftUpperBox d-flex flex-wrap p-2\">\r\n      {(!canBuildArchersAcademy ||\r\n        !enoughResources ||\r\n        !canBuildKnightsAcademy) && <div className=\"w-100\"></div>}\r\n\r\n      <div className=\"tutorialBoxText w-100\">\r\n        {props.purchases.map((purchase) => (\r\n          <div key={purchase.id}>\r\n            {errorMessages(purchase.id)}\r\n            <Purchase\r\n              onClick={setBuildingPurchased}\r\n              purchase={purchase}\r\n            ></Purchase>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"tutorialBoxTextNav d-flex w-100 justify-content-end align-items-end\">\r\n        <button\r\n          className=\"introBtnPrevious btn btn-dark btn-sm mr-3\"\r\n          onClick={closePurchaseBox}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseMenuBox;\r\n","import {\r\n  GiTwoCoins,\r\n  GiMetalBar,\r\n  GiWoodPile,\r\n  GiStoneStack,\r\n  GiSwordman,\r\n  GiBowman,\r\n  GiBurningForest,\r\n  GiFireShield,\r\n} from \"react-icons/gi\";\r\n\r\nimport React from \"react\";\r\nconst GameInfoCardText = (props) => {\r\n  const iconsSize = \"1.2em\";\r\n\r\n  if (\r\n    props.type.type === \"wonEnemyAttack\" ||\r\n    props.type.type === \"lostEnemyAttack\"\r\n  ) {\r\n    var lostWarriors = (\r\n      <div>\r\n        <p className=\"mt-4 text-center game-info-card__battle-losses\">\r\n          Losses after the battle:\r\n        </p>\r\n        <div className=\"d-flex flex-nowrap justify-content-around mx-5\">\r\n          {\" \"}\r\n          {props.type.type === \"lostEnemyAttack\" && (\r\n            <div>\r\n              <GiTwoCoins size={\"1.8em\"} color=\"red\" className=\"mr-2\" />\r\n              {props.lostBattleGold}\r\n            </div>\r\n          )}\r\n          <div>\r\n            <GiSwordman size={\"1.8em\"} color=\"red\" className=\"mr-2\" />\r\n            {props.lostBattleKnights}\r\n          </div>\r\n          <div>\r\n            <GiBowman size={\"1.8em\"} color=\"red\" className=\"mr-2\" />\r\n            {props.lostBattleArchers}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (props.type.id === 3) {\r\n    var productionInfo = (\r\n      <div className=\"game-info-card__production text-center pt-4 w-100\">\r\n        <p className=\"game-info-card__production-title\">Production per day</p>\r\n        <div className=\"d-flex flex-nowrap justify-content-around px-3 pt-2\">\r\n          <div>\r\n            <GiTwoCoins size={iconsSize} color=\"yellow\" />\r\n            <span className=\"pl-1\">{props.productionPerDay[0].goldPerDay}</span>\r\n          </div>\r\n          <div>\r\n            <GiWoodPile size={iconsSize} color=\"rgb(236 171 51)\" />\r\n            <span className=\"pl-1\">\r\n              {props.productionPerDay[0].lumberPerDay}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <GiStoneStack size={iconsSize} color=\"grey\" />\r\n            <span className=\"pl-1\">\r\n              {props.productionPerDay[0].stonePerDay}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <GiMetalBar size={iconsSize} color=\"white\" />\r\n            <span className=\"pl-1\">{props.productionPerDay[0].ironPerDay}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (props.type.type === \"wonEnemyAttack\") {\r\n    var wonBattle = (\r\n      <div>\r\n        <div className=\"text-center w-100 icon-float icon-float__won-battle\">\r\n          <GiFireShield size=\"3.2em\" />\r\n        </div>\r\n        <div className=\"text-center mb-2\">\r\n          <GiTwoCoins size={\"1.6em\"} color=\"yellow\" className=\"mr-2\" />\r\n          {props.wonBattleGold\r\n            .toFixed(0)\r\n            .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.type.type === \"lostEnemyAttack\") {\r\n    var lostBattle = (\r\n      <div className=\"text-center w-100 icon-float icon-float__lost-battle\">\r\n        <GiBurningForest size=\"2.8em\"/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (props.icon) {\r\n    var icons = (\r\n      <div className={`text-center w-100 icon-float ${props.type.type === \"gameWon\"? 'icon-float__won-game': 'icon-float__lost-game'}`}>\r\n        {props.icon}\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-100 game-info-card\">\r\n      <h1 className=\"game-info-card-header w-100\">{props.type.header}</h1>\r\n      <div className=\"\">\r\n        {\" \"}\r\n        {props.type.text && (\r\n          <h4 className=\"text-center pt-1 px-3\">{props.type.text}</h4>\r\n        )}\r\n        {props.type.secondText && (\r\n          <div className=\"px-5 pt-3\">{props.type.secondText}</div>\r\n        )}\r\n        <div className=\"px-5 pt-3\">{props.type.thirdText}</div>\r\n        {icons}\r\n        {productionInfo}\r\n        {wonBattle}\r\n        {lostBattle}\r\n        {lostWarriors}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameInfoCardText;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GameInfoCardText from \"./GameInfoCardText\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  GiBurningSkull,\r\n  GiRomanToga,\r\n  GiVikingLonghouse,\r\n  GiMedievalGate,\r\n  GiTwoCoins,\r\n  GiSwordman,\r\n  GiBowman,\r\n} from \"react-icons/gi\";\r\n\r\nconst Backdrop = (props) => {\r\n  const closeModal = () => {\r\n    if (\r\n      props.selectedInfoTypeId === 5 ||\r\n      props.selectedInfoTypeId === 6 ||\r\n      props.selectedInfoTypeId === 7 ||\r\n      props.selectedInfoTypeId === 8\r\n    ) {\r\n      return;\r\n    }\r\n    props.onCloseModal();\r\n  };\r\n  return <div className=\"backdrop\" onClick={closeModal}></div>;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  const formatNumber = (number) => {\r\n    return number.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  };\r\n\r\n  const getDefenseStrength = () => {\r\n    return formatNumber(\r\n      props.knights * 10 + props.archers * 30 + props.villagers\r\n    );\r\n  };\r\n\r\n  const getGoldLeftTillWin = () => {\r\n    return formatNumber(1000000 - props.gold);\r\n  };\r\n\r\n  const getWarriorsLeftTillWin = () => {\r\n    return formatNumber(10000 - props.knights - props.archers);\r\n  };\r\n\r\n  const getEnemyAtackStrength = () => {\r\n    return formatNumber(props.strengthOfEnemy);\r\n  };\r\n\r\n  const getDaysTillAttack = () => {\r\n    return;\r\n  };\r\n\r\n  var defenseStrength = getDefenseStrength();\r\n  var goldTillWin = getGoldLeftTillWin();\r\n  var warriorstillWin = getWarriorsLeftTillWin();\r\n  var enemyAtackStrength = getEnemyAtackStrength();\r\n  var daysTillAttack = getDaysTillAttack();\r\n\r\n  const [gameInfoTypes, setGameInfoTypes] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"enemiesNearby\",\r\n      header: \"Enemies Nearby\",\r\n      text: `${daysTillAttack} days till siege!`,\r\n      secondText: `Enemy's Attack Strength: ${enemyAtackStrength}`,\r\n      thirdText: `Your Defense Strength: ${defenseStrength}`,\r\n      icon: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      type: \"gameStatus\",\r\n      header: \"To Win The Game\",\r\n      text: \"\",\r\n      secondText: (\r\n        <React.Fragment>\r\n          <div className=\"d-flex flex-wrap w-100 justify-content-center\">\r\n            <h4>\r\n              Collect <b>1 million </b> gold!{\" \"}\r\n            </h4>\r\n            <span className=\"w-100 text-center\">\r\n              Till victory: &nbsp;\r\n              <GiTwoCoins size=\"0.8em\" color=\"rgb(242, 232, 36)\" />\r\n              <GiTwoCoins size=\"1.5em\" color=\"rgb(255, 243, 0)\" />\r\n              <GiTwoCoins size=\"1.0em\" color=\"rgb(235, 200, 45)\" />{\" \"}\r\n              {goldTillWin}{\" \"}\r\n            </span>\r\n          </div>\r\n        </React.Fragment>\r\n      ),\r\n      thirdText: (\r\n        <React.Fragment>\r\n          <div className=\"w-100 d-flex flex-wrap justify-content-center mt-2\">\r\n            <h4>... or Train 10,000 Warriors!</h4>\r\n            <span className=\"w-100 text-center pt-2\">\r\n              Till victory: &nbsp; <GiSwordman size=\"1.5em\" /> <GiBowman />{\" \"}\r\n              {warriorstillWin}\r\n            </span>\r\n          </div>\r\n        </React.Fragment>\r\n      ),\r\n      icon: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      type: \"playersStats\",\r\n      header: \"Game statistics\",\r\n      text: \"\",\r\n      secondText: `Battles Won: ${props.battlesWon}`,\r\n      thirdText: `Defense Strength: ${defenseStrength}`,\r\n      icon: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      type: \"settings\",\r\n      header: \"Settings\",\r\n      text: \"At the moment no game settings can be changed\",\r\n      secondText: \"\",\r\n      icon: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      type: \"gameWon\",\r\n      header: \"Congratulations! You Won The Game!!!\",\r\n      text: \"You proved that You have strong strategy skills!\",\r\n      secondText:\r\n        \"I hope that You did enjoy the game and I welcome You to play it again :)\",\r\n      icon: (\r\n        <React.Fragment>\r\n          <GiVikingLonghouse size=\"2.2em\" className=\"mb-0\" />\r\n          <GiRomanToga size=\"3.4em\" />\r\n          <GiMedievalGate size=\"2.2em\" className=\"mb-1\" />\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n\r\n    {\r\n      id: 6,\r\n      type: \"gameLost\",\r\n      header: \"Oh no... You lost\",\r\n      text: \"Enemy conquered Your village and killed all Your warriors and villagers...\",\r\n      secondText: \"\",\r\n      icon: <GiBurningSkull size=\"4.2em\" />,\r\n    },\r\n    {\r\n      id: 7,\r\n      type: \"wonEnemyAttack\",\r\n      header: \"Enemy attacked Your village!\",\r\n      text: \"You defended Your village. Great job! You received some gold:\",\r\n      secondText: \"\",\r\n      icon: \"\",\r\n    },\r\n    {\r\n      id: 8,\r\n      type: \"lostEnemyAttack\",\r\n      header: \"Enemy attacked Your village!\",\r\n      text: \"Enemy was very strong and delt you great damage. \",\r\n      secondText: \"Next time be more prepared for the battles.\",\r\n      icon: \"\",\r\n    },\r\n  ]);\r\n  useEffect(() => {\r\n    setGameInfoTypes(\r\n      gameInfoTypes.map((infoType) => {\r\n        return infoType.id === 1\r\n          ? {\r\n              ...infoType,\r\n              text: `${props.daysTillAttack} days till siege!`,\r\n            }\r\n          : infoType.id === 2\r\n          ? {\r\n              ...infoType,\r\n              secondText: (\r\n                <React.Fragment>\r\n                  <div className=\"d-flex flex-wrap w-100 justify-content-center\">\r\n                    <h4>\r\n                      Collect <b>1 million </b> gold!{\" \"}\r\n                    </h4>\r\n                    <span className=\"w-100 text-center\">\r\n                      Till victory: &nbsp;\r\n                      <GiTwoCoins size=\"0.8em\" color=\"rgb(242, 232, 36)\" />\r\n                      <GiTwoCoins size=\"1.5em\" color=\"rgb(255, 243, 0)\" />\r\n                      <GiTwoCoins size=\"1.0em\" color=\"rgb(235, 200, 45)\" />{\" \"}\r\n                      {goldTillWin}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </React.Fragment>\r\n              ),\r\n            }\r\n          : infoType;\r\n      })\r\n    );\r\n  }, [props.gold, props.daysTillAttack, goldTillWin]);\r\n  const filteredgameInfo = gameInfoTypes.filter((infoType) => {\r\n    return infoType.id === props.selectedInfoTypeId;\r\n  });\r\n\r\n  const closeModal = () => {\r\n    props.onCloseModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modalBox\">\r\n      <div className=\"d-flex flex-wrap justify-content-start h-100\">\r\n        <div className=\"d-flex align-items-start flex-column h-100 w-100\">\r\n          {filteredgameInfo.map((type) => (\r\n            <GameInfoCardText\r\n              key={type.id}\r\n              type={type}\r\n              productionPerDay={props.productionPerDay}\r\n              wonBattleGold={props.wonBattleGold}\r\n              lostBattleGold={props.lostBattleGold}\r\n              lostBattleKnights={props.lostBattleKnights}\r\n              lostBattleArchers={props.lostBattleArchers}\r\n              icon={type.icon}\r\n            />\r\n          ))}\r\n          {props.gamePlay === 1 && (\r\n            <div className=\"mt-auto\">\r\n              {\" \"}\r\n              <button\r\n                className=\"btn btn-danger btn-sm m-4\"\r\n                onClick={closeModal}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          )}\r\n          {(props.selectedInfoTypeId === 7 ||\r\n            props.selectedInfoTypeId === 8) && (\r\n            <div className=\"mt-auto text-center w-100 mb-3\">\r\n              {\" \"}\r\n              <button\r\n                className=\"btn btn-success btn-sm\"\r\n                onClick={props.proceedGame}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          )}\r\n          {(props.selectedInfoTypeId === 5 ||\r\n            props.selectedInfoTypeId === 6) && (\r\n            <div className=\"mt-auto mx-auto mb-3 text-center\">\r\n              {\" \"}\r\n              <button\r\n                className=\"btn btn-success btn-sm m-3\"\r\n                onClick={props.onPlayAgain}\r\n              >\r\n                Play Again\r\n              </button>\r\n              <button\r\n                className=\"btn btn-danger btn-sm m-3\"\r\n                onClick={props.onExitGame}\r\n              >\r\n                Exit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameInfoModal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop\r\n          selectedInfoTypeId={props.selectedInfoTypeId}\r\n          onCloseModal={props.onCloseModal}\r\n        />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          selectedInfoTypeId={props.selectedInfoTypeId}\r\n          onCloseModal={props.onCloseModal}\r\n          battlesWon={props.battlesWon}\r\n          knights={props.warriors[0].knights}\r\n          archers={props.warriors[0].archers}\r\n          villagers={props.warriors[0].villagers}\r\n          gold={props.warriors[0].gold}\r\n          productionPerDay={props.productionPerDay}\r\n          onExitGame={props.onExitGame}\r\n          onPlayAgain={props.onPlayAgain}\r\n          gamePlay={props.gamePlay}\r\n          daysTillAttack={props.daysTillAttack}\r\n          strengthOfEnemy={props.strengthOfEnemy}\r\n          proceedGame={props.proceedGame}\r\n          wonBattleGold={props.wonBattleGold}\r\n          lostBattleGold={props.lostBattleGold}\r\n          lostBattleKnights={props.lostBattleKnights}\r\n          lostBattleArchers={props.lostBattleArchers}\r\n        />,\r\n        document.getElementById(\"modal-root\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GameInfoModal;\r\n","import {\r\n    GiWoodCabin,\r\n    GiWoodAxe,\r\n    GiHut,\r\n    GiVikingLonghouse,\r\n    GiMining,\r\n    GiMetalBar,\r\n    GiEgyptianTemple,\r\n    GiSwordman,\r\n    GiBowman,\r\n    GiPointySword,\r\n    GiPocketBow,\r\n    GiShoulderArmor,\r\n    GiBarracksTent,\r\n    GiMedievalPavilion,\r\n    GiMedievalGate,\r\n    GiTripleGate,\r\n  } from \"react-icons/gi\";\r\nconst ImagesOfBuildings = (props) => {\r\n    const imageSize = props.biggerImageSize;\r\n    const secondImageSize = props.smallerImageSize;\r\n    const biggerIconColor = \"black\";\r\n  const getBuildingImage = (buildinId) => {\r\n    switch (buildinId) {\r\n      case 1:\r\n        return <GiHut size={imageSize} color={biggerIconColor} />;\r\n      case 2:\r\n        return <GiVikingLonghouse size={imageSize} color={biggerIconColor} />;\r\n      case 3:\r\n        return (\r\n          <span>\r\n            <GiBarracksTent size={imageSize} color={biggerIconColor} />{\" \"}\r\n            <GiSwordman size={secondImageSize} color={biggerIconColor} />\r\n          </span>\r\n        );\r\n      case 4:\r\n        return (\r\n          <span>\r\n            <GiMedievalPavilion size={imageSize} color={biggerIconColor} />{\" \"}\r\n            <GiBowman size={secondImageSize} color={biggerIconColor} />\r\n          </span>\r\n        );\r\n      case 5:\r\n        return (\r\n          <span>\r\n            <GiWoodCabin size={imageSize} color=\"rgb(227, 0, 0)\" />{\" \"}\r\n            <GiWoodAxe size={secondImageSize} />\r\n          </span>\r\n        );\r\n      case 6:\r\n        return (\r\n          <span>\r\n            <GiWoodCabin size={imageSize} color=\"rgb(95, 102, 74)\" />{\" \"}\r\n            <GiMining size={secondImageSize} />\r\n          </span>\r\n        );\r\n      case 7:\r\n        return (\r\n          <span>\r\n            <GiWoodCabin size={imageSize} color=\"rgb(19, 84, 1)\" />{\" \"}\r\n            <GiMetalBar size={secondImageSize} />\r\n          </span>\r\n        );\r\n      case 8:\r\n        return (\r\n          <span>\r\n            <GiMedievalGate size={imageSize} color={biggerIconColor} />{\" \"}\r\n            <GiShoulderArmor size={secondImageSize} />\r\n          </span>\r\n        );\r\n      case 9:\r\n        return (\r\n          <span>\r\n            <GiEgyptianTemple size={imageSize} color={biggerIconColor} />{\" \"}\r\n            <GiPointySword size={secondImageSize} />\r\n          </span>\r\n        );\r\n      case 10:\r\n        return (\r\n          <span>\r\n            <GiTripleGate size={imageSize} color={biggerIconColor} />{\" \"}\r\n            <GiPocketBow size={secondImageSize} />\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span></span>\r\n        )\r\n    }\r\n  };\r\n  return <div>{getBuildingImage(props.buildingId)}</div>;\r\n};\r\n\r\nexport default ImagesOfBuildings;\r\n","import ImagesOfBuildings from \"../ImagesOfBuildings\";\r\n\r\nconst BuildingSquare = (props) => {\r\n  const onSelectHandler = () => {\r\n    props.onSelectHandler(props.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"building-square\">\r\n      <div\r\n        className={`building-square__inner ${\r\n          props.selected ? \"selected-field\" : \"\"\r\n        }`}\r\n        onClick={onSelectHandler}\r\n      >\r\n        <ImagesOfBuildings\r\n          buildingId={props.building}\r\n          biggerImageSize={\"2.2em\"}\r\n          smallerImageSize={\"1.2em\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingSquare;\r\n","\r\nimport BuildingSquare from \"./BuildingSquare\";\r\n\r\nconst BuildingsField = (props) => {\r\n  const onSelectHandler = (field) => {\r\n    props.onSelectHandler(field)\r\n  }\r\n\r\n  return (\r\n    <div className=\"buildings-field\">\r\n      {props.fields.map((field) => (\r\n        <BuildingSquare\r\n          key={field.id}\r\n          id={field.id}\r\n          value={field.value}\r\n          building={field.building}\r\n          selected={field.selected}\r\n          onSelectHandler={onSelectHandler}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingsField;\r\n","import BuildingsField from \"./BuildingsArea/BuildingsField\";\r\n\r\nconst GameBuildingField = (props) => {\r\n\r\n  const onSelectHandler = (field) => {\r\n    props.onClickEventHandler(field);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BuildingsField\r\n        fields={props.buildingAreas}\r\n        onSelectHandler={onSelectHandler}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameBuildingField;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  GiSwordman,\r\n  GiBowman,\r\n  GiMetalBar,\r\n  GiTwoCoins,\r\n  GiWoodPile,\r\n  GiStoneStack,\r\n} from \"react-icons/gi\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport ImagesOfBuildings from \"./ImagesOfBuildings\";\r\nconst BuildingUpgradeCard = (props) => {\r\n  let displayUpgradeBtn = true;\r\n  const cannotDestroyHouseMessage =\r\n    \"Cannot destroy the house since workers and warriors need a place to live\";\r\n  const [buildingUpgraded, setBuildingUpgraded] = useState(false);\r\n  const [number, setNumber] = useState(0);\r\n  const [incrementorForPrice, setIncrementorForPrice] = useState(1);\r\n  const [isForge, setIsForge] = useState(false);\r\n  const [enoughResources, setEnoughResources] = useState(true);\r\n  const [cannotDestroyHouse, setCannotDestroyHouse] = useState(false);\r\n  const [canTrain, setCanTrain] = useState(true);\r\n\r\n  const checkIfEnoughResources = (buildingId) => {\r\n    return props.checkForResourcesToUpgrade(buildingId, 2);\r\n  };\r\n  const upgradeBuilding = () => {\r\n    setCannotDestroyHouse(false);\r\n    if (checkIfEnoughResources(props.selectedBuildingType)) {\r\n      setBuildingUpgraded(true);\r\n      props.onUpgrade(props.selectedBuildingType);\r\n      setEnoughResources(true);\r\n    } else {\r\n      setEnoughResources(false);\r\n    }\r\n  };\r\n\r\n  const destroyBuidling = () => {\r\n    if (props.selectedBuildingType === 1 || props.selectedBuildingType === 2) {\r\n      if (\r\n        !props.checkIfCanDestroyHouse(\r\n          props.selectedBuildingType,\r\n          props.selectedBuildingLevel\r\n        )\r\n      ) {\r\n        setCannotDestroyHouse(true);\r\n        setEnoughResources(true);\r\n        return;\r\n      }\r\n    }\r\n    setCannotDestroyHouse(false);\r\n\r\n    props.onDestroyBuilding(\r\n      props.selectedBuildingType,\r\n      props.selectedBuildingLevel\r\n    );\r\n  };\r\n\r\n  const closeModal = () => {\r\n    props.onCloseModal();\r\n  };\r\n\r\n  const decreaseNo = () => {\r\n    if (number === 0) {\r\n      return;\r\n    }\r\n    setNumber((prevNo) => prevNo - 1);\r\n  };\r\n\r\n  const increaseNr = () => {\r\n    if (\r\n      props.assets[0].iron < (number + 1) * incrementorForPrice ||\r\n      props.assets[0].gold < (number + 1) * incrementorForPrice * 100 ||\r\n      props.assets[0].villagers < number + 1\r\n    ) {\r\n      return;\r\n    }\r\n    setNumber((prevNo) => prevNo + 1);\r\n  };\r\n\r\n  const setMaxNr = () => {\r\n    if (\r\n      props.assets[0].iron < (number + 1) * incrementorForPrice ||\r\n      props.assets[0].gold < (number + 1) * incrementorForPrice * 100 ||\r\n      props.assets[0].villagers < number + 1\r\n    ) {\r\n      return;\r\n    } else {\r\n      let ironCountNo = Math.floor(props.assets[0].iron / incrementorForPrice);\r\n      let goldCountNo = Math.floor(\r\n        props.assets[0].gold / (incrementorForPrice * 100)\r\n      );\r\n      let villagersCountNo = props.assets[0].villagers;\r\n      let values = [ironCountNo, goldCountNo, villagersCountNo];\r\n      let minValue = Math.min.apply(\r\n        Math,\r\n        values.map(function (o) {\r\n          return o;\r\n        })\r\n      );\r\n      setNumber(minValue);\r\n    }\r\n  };\r\n\r\n  const trainWarriors = () => {\r\n    if (props.checkIfHasBuilding(props.selectedBuildingType)) {\r\n      setCanTrain(true);\r\n      props.onTrainWarriors(number);\r\n      setNumber(0);\r\n    } else {\r\n      setCanTrain(false);\r\n    }\r\n  };\r\n\r\n  let warriorImage = <GiSwordman size=\"3.2em\" />;\r\n  let toolTipWarriorStrength = \"Warrior strength: 10\";\r\n  let errorMessage = \"Check if You have built Armor & Swords Forges\";\r\n\r\n  if (props.selectedBuildingType === 3 || props.selectedBuildingType === 4) {\r\n    displayUpgradeBtn = false;\r\n    if (props.selectedBuildingType === 4) {\r\n      warriorImage = <GiBowman size=\"3.2em\" />;\r\n      toolTipWarriorStrength = \"Warrior strength: 30\";\r\n      errorMessage = \"Check if You have built Armor & Arrows Forges\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNumber(0);\r\n    setCanTrain(true);\r\n    setBuildingUpgraded(false);\r\n    props.selectedBuildingType === 3\r\n      ? setIncrementorForPrice(1)\r\n      : setIncrementorForPrice(3);\r\n    setEnoughResources(true);\r\n    setCannotDestroyHouse(false);\r\n    props.building.group === \"factories\"\r\n      ? setIsForge(true)\r\n      : setIsForge(false);\r\n  }, [props.buildingArea, props.selectedBuildingType, props.building.group]);\r\n\r\n  return (\r\n    <div>\r\n      <ReactTooltip place=\"bottom\" delayUpdate={1000} />\r\n      <div className=\"leftUpperBox d-flex flex-wrap w-100 p-2 justify-content-center\">\r\n        <div className=\"d-flex flex-wrap align-items-start building-card\">\r\n          <span className=\"building-title\">{props.buildingTitle}</span>\r\n          {!displayUpgradeBtn && (\r\n            <div className=\"d-flex flex-wrap w-100 justify-content-center mb-auto\">\r\n              <p className=\"mb-3\">\r\n                Cost:{\" \"}\r\n                <span data-delay-show=\"400\" data-tip=\"Iron\">\r\n                  <GiMetalBar size=\"1.4em\" color=\"white\" />{\" \"}\r\n                  {incrementorForPrice}{\" \"}\r\n                </span>\r\n                <span data-delay-show=\"400\" data-tip=\"Gold\">\r\n                  <GiTwoCoins\r\n                    size=\"1.4em\"\r\n                    className=\"ml-3 mr-1\"\r\n                    color=\"yellow\"\r\n                  />\r\n                  {incrementorForPrice * 100}\r\n                </span>\r\n              </p>\r\n              <span\r\n                className=\"d-flex flex-wrap w-100 justify-content-center\"\r\n                data-delay-show=\"100\"\r\n                data-tip={toolTipWarriorStrength}\r\n              >\r\n                {warriorImage}\r\n              </span>\r\n              <div className=\"d-flex flex-nowrap w-100 justify-content-center my-2\">\r\n                <div className=\"d-flex flex-nowrap align-content-center text-right\">\r\n                  {\" \"}\r\n                  <button\r\n                    className=\"btn btn-dark btn-xs ml-1 my-2\"\r\n                    onClick={decreaseNo}\r\n                  >\r\n                    -\r\n                  </button>\r\n                  <div className=\"d-flex flex-wrap align-content-center justify-content-center train-warriors-number mx-1\">\r\n                  {number}\r\n                </div>\r\n                  <button\r\n                    className=\"btn btn-dark btn-xs my-2\"\r\n                    onClick={increaseNr}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-dark btn-xs my-2 ml-1\"\r\n                    onClick={setMaxNr}\r\n                  >\r\n                    max\r\n                  </button>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-wrap justify-content-center\">\r\n                <span className=\"w-100 text-center\">Total Cost: </span>\r\n                <span data-delay-show=\"400\" data-tip=\"Iron\">\r\n                  <GiMetalBar size=\"1.4em\" color=\"white\" className=\"mx-2\" />\r\n                  {number * incrementorForPrice}{\" \"}\r\n                </span>{\" \"}\r\n                <span className=\"ml-4\" data-delay-show=\"400\" data-tip=\"Gold\">\r\n                  <GiTwoCoins size=\"1.4em\" color=\"yellow\" />{\" \"}\r\n                  {number * incrementorForPrice * 100}{\" \"}\r\n                </span>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-success btn-sm my-1 w-75\"\r\n                disabled={number === 0}\r\n                onClick={trainWarriors}\r\n              >\r\n                Train\r\n              </button>\r\n              {!canTrain && (\r\n                <div className=\"errorMessage px-2 text-center m-3\">\r\n                  {errorMessage}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {displayUpgradeBtn && (\r\n            <div className=\"d-flex mb-auto justify-content-center flex-wrap w-100\">\r\n              <div className=\"w-100 text-center mb-2\">\r\n                <ImagesOfBuildings\r\n                  buildingId={props.selectedBuildingType}\r\n                  biggerImageSize={\"3.2em\"}\r\n                  smallerImageSize={\"2.2em\"}\r\n                />\r\n                <p className=\"building-info-text\">\r\n                  {props.selectedBuildingText}\r\n                </p>\r\n              </div>\r\n              {props.selectedBuildingGroup !== \"factories\" ? (\r\n                <span className=\"building-level-text w-100 text-center mx-5 mb-1\">\r\n                  {\" \"}\r\n                  {props.selectedBuildingLevel + 1} Level{\" \"}\r\n                </span>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {displayUpgradeBtn && !isForge && (\r\n          <div className=\"d-flex mb-auto justify-content-center flex-wrap w-100\">\r\n            {!enoughResources && (\r\n              <div className=\"errorMessage w-100 mx-2 mb-2\">\r\n                Not enough resources\r\n              </div>\r\n            )}\r\n            {props.selectedBuildingLevel === 0 ? (\r\n              <div className=\"w-100 text-center upgrade-building-box mb-2\">\r\n                <div className=\"d-flex flex-wrap justify-content-around w-100 px-2\">\r\n                  <span data-delay-show=\"400\" data-tip=\"Gold\">\r\n                    <GiTwoCoins size=\"1.2em\" color=\"yellow\" /> &nbsp;\r\n                    {props.building.priceInGold * 2}\r\n                  </span>\r\n                  <span data-delay-show=\"400\" data-tip=\"Lumber\">\r\n                    <GiWoodPile size=\"1.5em\" color=\"rgb(236 171 51)\" /> &nbsp;\r\n                    {props.building.priceInWood * 2}\r\n                  </span>\r\n                  {props.building.priceInStone ? (\r\n                    <span data-delay-show=\"400\" data-tip=\"Stone\">\r\n                      <GiStoneStack size=\"1.5em\" color=\"grey\" /> &nbsp;\r\n                      {props.building.priceInStone * 2}\r\n                    </span>\r\n                  ) : null}\r\n                  {props.building.priceInIron ? (\r\n                    <span data-delay-show=\"400\" data-tip=\"Iron\">\r\n                      <GiMetalBar size=\"1.2em\" /> &nbsp;{\" \"}\r\n                      {props.building.priceInIron * 2}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n\r\n                <button\r\n                  className=\"btn btn-success btn-sm m-2 py-0 px-3\"\r\n                  onClick={upgradeBuilding}\r\n                  data-delay-show=\"400\"\r\n                  data-tip=\"Double the production\"\r\n                  disabled={props.selectedBuildingLevel > 0 || buildingUpgraded}\r\n                >\r\n                  Upgrade\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n\r\n            {cannotDestroyHouse && (\r\n              <div className=\"errorMessage m-3\">\r\n                {\" \"}\r\n                {cannotDestroyHouseMessage}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"d-flex justify-content-center mt-auto flex-wrap\">\r\n          <button\r\n            className=\"btn btn-warning btn-sm m-1\"\r\n            onClick={destroyBuidling}\r\n            data-delay-show=\"100\"\r\n            data-tip=\"You will receive the half of the cost of 1st level building\"\r\n          >\r\n            Destroy Building\r\n          </button>\r\n          <button className=\"btn btn-dark btn-sm m-1\" onClick={closeModal}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingUpgradeCard;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport TutorialBox from \"./TutorialBox\";\r\nimport PurchaseMenuBox from \"./PurchaseMenuBox\";\r\nimport GameInfoModal from \"./GameInfoModal\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaWhmcs, FaTrophy } from \"react-icons/fa\";\r\nimport {\r\n  GiHouse,\r\n  GiAxeInStump,\r\n  GiCrossedSwords,\r\n  GiFactory,\r\n  GiSwordsEmblem,\r\n  GiWoodCabin,\r\n  GiWoodAxe,\r\n  GiHut,\r\n  GiVikingLonghouse,\r\n  GiMining,\r\n  GiMetalBar,\r\n  GiEgyptianTemple,\r\n  GiSwordman,\r\n  GiBowman,\r\n  GiPointySword,\r\n  GiPocketBow,\r\n  GiShoulderArmor,\r\n  GiMedievalGate,\r\n  GiMedievalPavilion,\r\n  GiBarracksTent,\r\n  GiTripleGate,\r\n} from \"react-icons/gi\";\r\nimport { BiStats } from \"react-icons/bi\";\r\nimport GameBuildingField from \"./GameBuildingField\";\r\nimport BuildingUpgradeCard from \"./BuildingUpgradeCard\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className=\"backdrop\" onClick={props.onCloseModal}></div>;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className=\"modalBox\">\r\n      <div className=\"d-flex flex-wrap justify-content-start h-100\">\r\n        <div className=\"d-flex align-items-start flex-column h-100 w-100 \">\r\n          <h3 className=\"text-center w-100 mt-5\">Hello {props.playersName}!</h3>\r\n          <p className=\"text-center w-100 mt-4\">\r\n            Welcome to the strategy game!\r\n          </p>\r\n          <p className=\"text-center w-100 mt-4\">\r\n            I hope You will enjoy the game and will have a great time!\r\n          </p>\r\n          <p className=\"d-flex justify-content-around w-50 mt-4 align-items-end mx-auto\">\r\n            <GiHut size=\"2.2em\" className=\"mb-1\" />\r\n            <GiVikingLonghouse size=\"3.2em\" className=\"mb-0\" />\r\n            <GiBarracksTent size=\"3.2em\" className=\"mb-1\"/>\r\n            <GiMedievalGate size=\"3.2em\" className=\"mb-1\" />\r\n          </p>\r\n          <div className=\"mt-auto text-center w-100 mb-3\">\r\n            <button\r\n              className=\"btn btn-success btn-sm px-5 mb-3\"\r\n              onClick={props.onCloseModal}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameModal = (props) => {\r\n  const goldProvidedByHut = 10;\r\n  const goldProvidedByHouse = goldProvidedByHut * 20;\r\n  const lumberProvided = 5;\r\n  const stoneProvided = 5;\r\n  const ironProvided = 5;\r\n  const defaultTimeSpeed = 400000; //4000\r\n\r\n  const [strengthOfEnemy, setStrengthOfEnemy] = useState(50);\r\n  const [daysTillAttack, setDaysTillAttack] = useState(50);\r\n  const [battlesWon, setBattlesWon] = useState(0);\r\n\r\n  const [showGameInfoModal, setGameInfoModal] = useState(false);\r\n  const [showPurchaseMenu, setShowPurchaseMenu] = useState(false);\r\n  const [showBuildingUpgrade, setShowBuildingUpgrade] = useState(false);\r\n  const [showWelcomeModal, setShowWelcomeModal] = useState(true);\r\n\r\n  const [purchases, setPurchases] = useState([\r\n    {\r\n      id: 1,\r\n      group: \"villageBuildings\",\r\n      type: \"House\",\r\n      title: \"Hut\",\r\n      workersNeeded: 1,\r\n      priceInGold: 50,\r\n      priceInWood: 10,\r\n      priceInStone: 0,\r\n      priceInIron: 0,\r\n      icon1: <GiHut size=\"3.2em\" />,\r\n      icon2: \"\",\r\n      image: \"\",\r\n      show: false,\r\n      tooltip: \"The Hut lets 20 people live in Your village\",\r\n      level1text: `Provides ${goldProvidedByHut} gold per day and 20 living places`,\r\n      level2text: `Provides ${\r\n        goldProvidedByHut * 2\r\n      } gold per day and 40 living places`,\r\n    },\r\n    {\r\n      id: 2,\r\n      group: \"villageBuildings\",\r\n      type: \"Big House\",\r\n      title: \"House\",\r\n      workersNeeded: 10,\r\n      priceInGold: 2000,\r\n      priceInWood: 400,\r\n      priceInStone: 200,\r\n      priceInIron: 100,\r\n      image: \"\",\r\n      icon1: <GiVikingLonghouse size=\"3.2em\" />,\r\n      icon2: \"\",\r\n      show: false,\r\n      tooltip: \"The Big House lets 200 people live in Your village\",\r\n      level1text: `Provides ${goldProvidedByHouse} gold per day and 200 living places`,\r\n      level2text: `Provides ${\r\n        goldProvidedByHouse * 2\r\n      } gold per day and 400 living places`,\r\n    },\r\n    {\r\n      id: 3,\r\n      group: \"warBuildings\",\r\n      type: \"Knights Academy\",\r\n      title: \"Knights Academy\",\r\n      workersNeeded: 10,\r\n      priceInGold: 2000,\r\n      priceInWood: 200,\r\n      priceInStone: 200,\r\n      priceInIron: 200,\r\n      image: \"\",\r\n      icon1: <GiBarracksTent size=\"3.2em\" />,\r\n      icon2: <GiSwordman size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"You will be able to train your villagers to become knights\",\r\n      level1text: \"Train knights. Knight has 10 defense strength.\",\r\n      level2text: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      group: \"warBuildings\",\r\n      type: \"Archers Academy\",\r\n      title: \"Archers Academy\",\r\n      workersNeeded: 30,\r\n      priceInGold: 6000,\r\n      priceInWood: 600,\r\n      priceInStone: 600,\r\n      priceInIron: 600,\r\n      image: \"\",\r\n      icon1: <GiMedievalPavilion size=\"3.2em\" />,\r\n      icon2: <GiBowman size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"You will be able to train your villagers to become archers\",\r\n      level1text: \"Train archers. Archer has 30 defense strength.\",\r\n      level2text: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      group: \"resources\",\r\n      type: \"Lumber Camp\",\r\n      title: \"Lumber Camp\",\r\n      workersNeeded: 2,\r\n      priceInGold: 100,\r\n      priceInWood: 20,\r\n      priceInStone: 0,\r\n      priceInIron: 0,\r\n      image: \"\",\r\n      icon1: <GiWoodCabin size=\"3.2em\" color=\"rgb(227, 0, 0)\" />,\r\n      icon2: <GiWoodAxe size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"The Lumber Camp produces 5 wood every day\",\r\n      level1text: \"Provides 5 lumber per day\",\r\n      level2text: \"Provides 10 lumber per day\",\r\n    },\r\n    {\r\n      id: 6,\r\n      group: \"resources\",\r\n      type: \"Stone Camp\",\r\n      title: \"Stone Camp\",\r\n      workersNeeded: 4,\r\n      priceInGold: 200,\r\n      priceInWood: 240,\r\n      priceInStone: 0,\r\n      priceInIron: 0,\r\n      image: \"\",\r\n      icon1: <GiWoodCabin size=\"3.2em\" color=\"rgb(178 181 171)\" />,\r\n      icon2: <GiMining size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"The Stone Camp produces 5 stones per day\",\r\n      level1text: `Provides 5 stones per day`,\r\n      level2text: \"Provides 10 stones per day\",\r\n    },\r\n    {\r\n      id: 7,\r\n      group: \"resources\",\r\n      type: \"Metal Camp\",\r\n      title: \"Metal Camp\",\r\n      workersNeeded: 10,\r\n      priceInGold: 400,\r\n      priceInWood: 350,\r\n      priceInStone: 100,\r\n      priceInIron: 0,\r\n      image: \"\",\r\n      icon1: <GiWoodCabin size=\"3.2em\" color=\"rgb(19, 139, 1)\" />,\r\n      icon2: <GiMetalBar size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"The Metal Camp produces 5 Iron per day\",\r\n      level1text: \"Provides 5 metal bars per day\",\r\n      level2text: \"Provides 10 metal bars per day\",\r\n    },\r\n    {\r\n      id: 8,\r\n      group: \"factories\",\r\n      type: \"Armor forge\",\r\n      title: \"Armor forge\",\r\n      workersNeeded: 5,\r\n      priceInGold: 1000,\r\n      priceInWood: 300,\r\n      priceInStone: 100,\r\n      priceInIron: 100,\r\n      image: \"\",\r\n      icon1: <GiMedievalGate size=\"3.2em\" />,\r\n      icon2: <GiShoulderArmor size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"The Armor forge is needed for Knights and Archers academies\",\r\n      level1text:\r\n        \"Needed for Knights and Archers Academies. Provides armor for warriors\",\r\n      level2text: \"\",\r\n    },\r\n    {\r\n      id: 9,\r\n      group: \"factories\",\r\n      type: \"Swords forge\",\r\n      title: \"Swords forge\",\r\n      workersNeeded: 5,\r\n      priceInGold: 1000,\r\n      priceInWood: 300,\r\n      priceInStone: 100,\r\n      priceInIron: 100,\r\n      image: \"\",\r\n      icon1: <GiEgyptianTemple size=\"3.2em\" />,\r\n      icon2: <GiPointySword size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"The Swords forge is needed for Knights academy\",\r\n      level1text: \"Needed for Knights Academy. Provides swords for knights.\",\r\n      level2text: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      group: \"factories\",\r\n      type: \"Arrows forge\",\r\n      title: \"Arrows forge\",\r\n      workersNeeded: 5,\r\n      priceInGold: 1000,\r\n      priceInWood: 300,\r\n      priceInStone: 100,\r\n      priceInIron: 100,\r\n      image: \"\",\r\n      icon1: <GiTripleGate size=\"3.2em\" />,\r\n      icon2: <GiPocketBow size=\"2.2em\" />,\r\n      show: false,\r\n      tooltip: \"The Arrows forge is needed for Archers academy\",\r\n      level1text:\r\n        \"Needed for Archers Academy. Provides arrows and bows for archers.\",\r\n      level2text: \"\",\r\n    },\r\n  ]);\r\n  const [isFieldSelected, setIsFieldSelected] = useState(false);\r\n  const [hasBuilding, setHasBuilding] = useState(false);\r\n  const [buildingAreas, setB] = useState([\r\n    {\r\n      id: 0,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 1,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 6,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 7,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 8,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 9,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 11,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 12,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 13,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 14,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 15,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 16,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 17,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 18,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 19,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 20,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 21,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 22,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 23,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 24,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 25,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 26,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 27,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 28,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 29,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 30,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 31,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 32,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 33,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 34,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 35,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 36,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 37,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 38,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 39,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 40,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n    {\r\n      id: 41,\r\n      value: 0,\r\n      selected: false,\r\n      building: -1,\r\n      buildingLevel: 0,\r\n      group: \"\",\r\n    },\r\n  ]);\r\n  const [selectedInfoTypeId, setSelectedInfoTypeId] = useState(-1);\r\n  const [selectedBuildingType, setSelectedBuildingType] = useState(-1);\r\n  const [selectedBuildingLevel, setSelectedBuildingLevel] = useState(0);\r\n  const [selectedBuildingArea, setSelectedBuildingArea] = useState(0);\r\n  const [selectedBuildingGroup, setSelectedBuildingGroup] = useState();\r\n  const [selectedBuildingTitle, setSelectedBuildingTitle] = useState();\r\n  const [selectedBuildingText, setSelectedBuildingText] = useState();\r\n  const [assets, setAssets] = useState([\r\n    {\r\n      // happinessOfVillagers: 80,\r\n      villagers: 10,\r\n      knights: 0,\r\n      archers: 0,\r\n      lumber: 100,\r\n      stone: 0,\r\n      iron: 0,\r\n      gold: 1000,\r\n      // villagers: 10000,\r\n      // knights: 0,\r\n      // archers: 0,\r\n      // lumber: 10000,\r\n      // stone: 10000,\r\n      // iron: 10000,\r\n      // gold: 900000,\r\n    },\r\n  ]);\r\n  //#region Start\r\n\r\n  const buildingNeeded = (buildingType) => {\r\n    switch (buildingType) {\r\n      case 3:\r\n        return [8, 9];\r\n      case 4:\r\n        return [8, 10];\r\n        default:\r\n          return [8, 9];\r\n    }\r\n  };\r\n\r\n  const checkIfHasBuilding = (buildingType) => {\r\n    var hasBuilding = false;\r\n    var neededBuilding = buildingNeeded(buildingType);\r\n    var proceedCheck = true;\r\n    neededBuilding.forEach((element) => {\r\n      if (proceedCheck) {\r\n        if (buildingAreas.findIndex((obj) => obj.building === element) >= 0) {\r\n          hasBuilding = true;\r\n        } else {\r\n          proceedCheck = false;\r\n          hasBuilding = false;\r\n        }\r\n      }\r\n    });\r\n    return hasBuilding;\r\n  };\r\n  const onTrainWarriors = (amount) => {\r\n    if (gamePlay === 1) {\r\n      if (selectedBuildingType === 3) {\r\n        setAssets(\r\n          assets.map((asset) => {\r\n            return {\r\n              ...asset,\r\n              knights: asset.knights + amount,\r\n              iron: asset.iron - amount,\r\n              gold: asset.gold - amount * 100,\r\n              villagers: asset.villagers - amount,\r\n            };\r\n          })\r\n        );\r\n      } else {\r\n        setAssets(\r\n          assets.map((asset) => {\r\n            return {\r\n              ...asset,\r\n              archers: asset.archers + amount,\r\n              iron: asset.iron - amount * 3,\r\n              gold: asset.gold - amount * 300,\r\n              villagers: asset.villagers - amount,\r\n            };\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const closePurchaseBox = () => {\r\n    setShowPurchaseMenu(false);\r\n  };\r\n\r\n  const setPurchasegroup = (group) => {\r\n    setPurchases(\r\n      purchases.map((purchase) =>\r\n        purchase.group === group\r\n          ? { ...purchase, show: true }\r\n          : { ...purchase, show: false }\r\n      )\r\n    );\r\n    setShowPurchaseMenu(true);\r\n  };\r\n\r\n  const deselectField = () => {\r\n    var indexOfSelected = buildingAreas.findIndex(\r\n      (obj) => obj.selected === true\r\n    );\r\n    if (indexOfSelected >= 0) {\r\n      buildingAreas[indexOfSelected].selected = false;\r\n    }\r\n  };\r\n\r\n  const handleDeselectFieldEvent = () => {\r\n    deselectField();\r\n    setIsFieldSelected(false);\r\n    closePurchaseBox();\r\n    setHasBuilding(false);\r\n    setSelectedBuildingArea(-1);\r\n  };\r\n\r\n  const handleBuildingBuyingEvent = (building) => {\r\n    if (gamePlay === 1) {\r\n      var indexOfSelected = buildingAreas.findIndex(\r\n        (obj) => obj.selected === true\r\n      );\r\n      if (indexOfSelected >= 0) {\r\n        var workersIncrementor = 0;\r\n        if (building.id === 1) {\r\n          workersIncrementor = 20;\r\n        } else if (building.id === 2) {\r\n          workersIncrementor = 200;\r\n        }\r\n        if (\r\n          (building.id === 3 || building.id === 4) &&\r\n          !checkIfHasBuilding(building.id)\r\n        ) {\r\n          return;\r\n        }\r\n        setAssets(\r\n          assets.map((asset) => {\r\n            return {\r\n              ...asset,\r\n              iron: asset.iron - purchases[building.id - 1].priceInIron,\r\n              gold: asset.gold - purchases[building.id - 1].priceInGold,\r\n              lumber: asset.lumber - purchases[building.id - 1].priceInWood,\r\n              stone: asset.stone - purchases[building.id - 1].priceInStone,\r\n              villagers:\r\n                asset.villagers -\r\n                purchases[building.id - 1].workersNeeded +\r\n                workersIncrementor,\r\n            };\r\n          })\r\n        );\r\n        buildingAreas[indexOfSelected].building = building.id;\r\n        buildingAreas[indexOfSelected].group = building.group;\r\n        onClickEventHandler(indexOfSelected);\r\n      }\r\n    }\r\n  };\r\n\r\n  const setBuildingTitle = (field) => {\r\n    var indexOfSelectedBuilding;\r\n    if (field >= 0) {\r\n      indexOfSelectedBuilding = buildingAreas[field].building;\r\n    }\r\n    if (indexOfSelectedBuilding >= 0) {\r\n      setSelectedBuildingTitle(purchases[indexOfSelectedBuilding - 1].title);\r\n    }\r\n  };\r\n\r\n  const setBuildingText = (field) => {\r\n    var indexOfSelectedBuilding;\r\n    if (field >= 0) {\r\n      indexOfSelectedBuilding = buildingAreas[field].building;\r\n    }\r\n    if (\r\n      indexOfSelectedBuilding >= 0 &&\r\n      buildingAreas[field].buildingLevel === 0\r\n    ) {\r\n      setSelectedBuildingText(\r\n        purchases[indexOfSelectedBuilding - 1].level1text\r\n      );\r\n    } else if (\r\n      indexOfSelectedBuilding >= 0 &&\r\n      buildingAreas[field].buildingLevel === 1\r\n    ) {\r\n      setSelectedBuildingText(\r\n        purchases[indexOfSelectedBuilding - 1].level2text\r\n      );\r\n    }\r\n  };\r\n\r\n  const onClickEventHandler = (selectedField) => {\r\n    if (gamePlay === 1) {\r\n      if (buildingAreas[selectedField].building >= 0) {\r\n        setHasBuilding(true);\r\n        setShowBuildingUpgrade(true);\r\n        closePurchaseBox();\r\n        setSelectedBuildingType(buildingAreas[selectedField].building);\r\n        setSelectedBuildingLevel(buildingAreas[selectedField].buildingLevel);\r\n        setSelectedBuildingGroup(buildingAreas[selectedField].group);\r\n      } else {\r\n        setHasBuilding(false);\r\n        setShowBuildingUpgrade(false);\r\n        setSelectedBuildingType(-1);\r\n        setSelectedBuildingLevel(0);\r\n        setSelectedBuildingGroup();\r\n      }\r\n      setSelectedBuildingArea(selectedField);\r\n      setIsFieldSelected(true);\r\n      setB(\r\n        buildingAreas.map((buildingArea) =>\r\n          buildingArea.id === selectedField\r\n            ? { ...buildingArea, selected: true }\r\n            : { ...buildingArea, selected: false }\r\n        )\r\n      );\r\n      setBuildingTitle(selectedField);\r\n      setBuildingText(selectedField);\r\n    }\r\n  };\r\n\r\n  const handleGameInfoTypeSelection = (id) => {\r\n    if (id === 3) {\r\n      updateProductionPerDay();\r\n    }\r\n    setSelectedInfoTypeId(id);\r\n    setGameInfoModal(true);\r\n  };\r\n\r\n  const onCloseGameInfoModal = () => {\r\n    setGameInfoModal(false);\r\n  };\r\n\r\n  const upgradeBuilding = (buildingId) => {\r\n    if (gamePlay === 1) {\r\n      var indexOfSelected = buildingAreas.findIndex(\r\n        (obj) => obj.selected === true\r\n      );\r\n      if (indexOfSelected >= 0) {\r\n        var updatedHousePeople = 0;\r\n        if (buildingId === 1) {\r\n          updatedHousePeople = 20;\r\n        } else if (buildingId === 2) {\r\n          updatedHousePeople = 200;\r\n        }\r\n        setAssets(\r\n          assets.map((asset) => {\r\n            return {\r\n              ...asset,\r\n              iron: asset.iron - purchases[buildingId - 1].priceInIron * 2,\r\n              gold: asset.gold - purchases[buildingId - 1].priceInGold * 2,\r\n              lumber: asset.lumber - purchases[buildingId - 1].priceInWood * 2,\r\n              stone: asset.stone - purchases[buildingId - 1].priceInStone * 2,\r\n              villagers: asset.villagers + updatedHousePeople,\r\n            };\r\n          })\r\n        );\r\n        buildingAreas[indexOfSelected].buildingLevel = 1;\r\n        setSelectedBuildingLevel(1);\r\n        setBuildingText(indexOfSelected);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCloseUpgradeModal = () => {\r\n    setShowBuildingUpgrade(false);\r\n    handleDeselectFieldEvent();\r\n  };\r\n\r\n  const onDestroyBuildingHandler = (buildingId) => {\r\n    if (gamePlay === 1) {\r\n      var indexOfSelected = buildingAreas.findIndex(\r\n        (obj) => obj.selected === true\r\n      );\r\n      var villagersCount = 0;\r\n      if (buildingId === 1) {\r\n        villagersCount =\r\n          20 * (buildingAreas[indexOfSelected].buildingLevel + 1);\r\n      } else if (buildingId === 2) {\r\n        villagersCount =\r\n          200 * (buildingAreas[indexOfSelected].buildingLevel + 1);\r\n      }\r\n\r\n      if (indexOfSelected >= 0) {\r\n        setAssets(\r\n          assets.map((asset) => {\r\n            return {\r\n              ...asset,\r\n              iron: asset.iron + purchases[buildingId - 1].priceInIron / 2,\r\n              gold: asset.gold + purchases[buildingId - 1].priceInGold / 2,\r\n              lumber: asset.lumber + purchases[buildingId - 1].priceInWood / 2,\r\n              stone: asset.stone + purchases[buildingId - 1].priceInStone / 2,\r\n              villagers:\r\n                asset.villagers +\r\n                (purchases[buildingId - 1].workersNeeded - villagersCount),\r\n            };\r\n          })\r\n        );\r\n        buildingAreas[indexOfSelected].buildingLevel = 0;\r\n        buildingAreas[indexOfSelected].building = -1;\r\n        buildingAreas[indexOfSelected].group = \"\";\r\n        setHasBuilding(false);\r\n        setShowBuildingUpgrade(false);\r\n        setSelectedBuildingType(-1);\r\n        setSelectedBuildingLevel(0);\r\n        setSelectedBuildingGroup();\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkIfEnoughResourcesToBuy = (buildingId, incrementor) => {\r\n    var priceInGold = purchases[buildingId - 1].priceInGold * incrementor;\r\n    var priceInWood = purchases[buildingId - 1].priceInWood * incrementor;\r\n    var priceInIron = purchases[buildingId - 1].priceInIron * incrementor;\r\n    var priceInStone = purchases[buildingId - 1].priceInStone * incrementor;\r\n    var villagersNeeded = purchases[buildingId - 1].workersNeeded * incrementor;\r\n    if (\r\n      priceInGold > assets[0].gold ||\r\n      priceInWood > assets[0].lumber ||\r\n      priceInIron > assets[0].iron ||\r\n      priceInStone > assets[0].stone ||\r\n      villagersNeeded > assets[0].villagers\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkIfEnoughResourcesToUpgrade = (buildingId, incrementor) => {\r\n    var priceInGold = purchases[buildingId - 1].priceInGold * incrementor;\r\n    var priceInWood = purchases[buildingId - 1].priceInWood * incrementor;\r\n    var priceInIron = purchases[buildingId - 1].priceInIron * incrementor;\r\n    var priceInStone = purchases[buildingId - 1].priceInStone * incrementor;\r\n    if (\r\n      priceInGold > assets[0].gold ||\r\n      priceInWood > assets[0].lumber ||\r\n      priceInIron > assets[0].iron ||\r\n      priceInStone > assets[0].stone\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkIfCanDestroyHouse = (buildingType, buildingLevel) => {\r\n    var hutPeopleCount = 0;\r\n    var bigHousesPeopleCount = 0;\r\n    var deductor;\r\n    var workersNeeded = 0;\r\n    if (buildingType === 1) {\r\n      deductor = 20 * (buildingLevel + 1);\r\n      workersNeeded = 1;\r\n    } else {\r\n      deductor = 200 * (buildingLevel + 1);\r\n      workersNeeded = 10;\r\n    }\r\n    buildingAreas.map((area) => {\r\n      if (area.building === 1) {\r\n        hutPeopleCount += 20 * (area.buildingLevel + 1);\r\n      }\r\n      if (area.building === 2) {\r\n        bigHousesPeopleCount += 200 * (area.buildingLevel + 1);\r\n      }\r\n      return 1;\r\n    });\r\n\r\n    if (\r\n      hutPeopleCount + bigHousesPeopleCount - deductor + workersNeeded <\r\n        assets[0].knights + assets[0].archers ||\r\n      assets[0].villagers - deductor < 0\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const reload = () => window.location.reload();\r\n\r\n  const [countDays, setCountDays] = useState(0);\r\n  const [timeSpeed, setTimeSpeed] = useState(defaultTimeSpeed);\r\n\r\n  const countProduction = (buildingId, production) => {\r\n    const building1Lev = buildingAreas.filter(\r\n      (item) => item.building === buildingId && item.buildingLevel === 0\r\n    );\r\n    const building2Lev = buildingAreas.filter(\r\n      (item) => item.building === buildingId && item.buildingLevel === 1\r\n    );\r\n\r\n    return (\r\n      building1Lev.length * production + building2Lev.length * production * 2\r\n    );\r\n  };\r\n\r\n  const [productionPerDay, setProductionPerDay] = useState([\r\n    {\r\n      lumberPerDay: 0,\r\n      goldPerDay: 0,\r\n      ironPerDay: 0,\r\n      stonePerDay: 0,\r\n    },\r\n  ]);\r\n\r\n  const updateProductionPerDay = () => {\r\n    setProductionPerDay(\r\n      productionPerDay.map((products) => {\r\n        return {\r\n          ...products,\r\n          lumberPerDay: countProduction(5, lumberProvided),\r\n          goldPerDay:\r\n            countProduction(1, goldProvidedByHut) +\r\n            countProduction(2, goldProvidedByHouse),\r\n          ironPerDay: countProduction(7, ironProvided),\r\n          stonePerDay: countProduction(6, stoneProvided),\r\n        };\r\n      })\r\n    );\r\n  };\r\n  //#endregion\r\n\r\n  const [gamePlay, setGamePlay] = useState(1);\r\n\r\n  const checkIfGameWon = () => {\r\n    if (\r\n      assets[0].gold >= 1000000 ||\r\n      assets[0].knights + assets[0].archers >= 10000\r\n    ) {\r\n      handleGameInfoTypeSelection(5);\r\n      setGamePlay(0);\r\n    }\r\n  };\r\n\r\n  const updateResources = () => {\r\n    var hutsProduction = countProduction(1, goldProvidedByHut);\r\n    var housesProduction = countProduction(2, goldProvidedByHouse);\r\n    var lumberProduction = countProduction(5, lumberProvided);\r\n    var stoneProduction = countProduction(6, stoneProvided);\r\n    var ironProduction = countProduction(7, ironProvided);\r\n\r\n    setAssets(\r\n      assets.map((asset) => {\r\n        return {\r\n          ...asset,\r\n          gold: asset.gold + hutsProduction + housesProduction,\r\n          lumber: asset.lumber + lumberProduction,\r\n          stone: asset.stone + stoneProduction,\r\n          iron: asset.iron + ironProduction,\r\n        };\r\n      })\r\n    );\r\n    setCountDays((prev) => prev + 1);\r\n    setDaysTillAttack((prev) => prev - 1);\r\n  };\r\n\r\n  const calculateDefenseStrength = () => {\r\n    return (\r\n      assets[0].knights * 10 + assets[0].archers * 30 + assets[0].villagers\r\n    );\r\n  };\r\n\r\n  const [wonBattleGold, setWonBattleGold] = useState(0);\r\n  const [lostBattleGold, setLostBattleGold] = useState(0);\r\n  const [lostBattleKnights, setLostBattleKnights] = useState(0);\r\n  const [lostBattleArchers, setLostBattleArchers] = useState(0);\r\n\r\n  const lossesAfterBattle = (statusOfBattle) => {\r\n    if (statusOfBattle === \"lost\") {\r\n      let severityMultiplier;\r\n      let severityOfLoss =\r\n        strengthOfEnemy / calculateDefenseStrength().toFixed(0);\r\n      if (severityOfLoss > 1.5) {\r\n        severityMultiplier = 0.9;\r\n      } else if (severityOfLoss <= 1.5 && severityOfLoss > 1.25) {\r\n        severityMultiplier = 0.5;\r\n      } else {\r\n        severityMultiplier = 0.25;\r\n      }\r\n\r\n      var lostGold =\r\n        assets[0].gold >= 100\r\n          ? parseInt((assets[0].gold * severityMultiplier).toFixed(0), 10)\r\n          : 0;\r\n      setAssets(\r\n        assets.map((asset) => {\r\n          return {\r\n            ...asset,\r\n            gold: asset.gold - lostGold,\r\n            knights: 0,\r\n            archers: 0,\r\n          };\r\n        })\r\n      );\r\n      setLostBattleKnights(assets[0].knights);\r\n      setLostBattleArchers(assets[0].archers);\r\n      handleGameInfoTypeSelection(8);\r\n      setLostBattleGold(lostGold);\r\n    } else {\r\n      let earnedGold = calculateDefenseStrength() - strengthOfEnemy;\r\n      let severityMultiplierKnights;\r\n      let severityMultiplierArchers;\r\n      let severityOfWin = (\r\n        calculateDefenseStrength() / strengthOfEnemy\r\n      ).toFixed(2);\r\n      let wonBattleLostKnights;\r\n      let wonBattleLostArchers;\r\n\r\n      if (severityOfWin >= 2) {\r\n        severityMultiplierKnights = 0;\r\n        severityMultiplierArchers = 0;\r\n      } else if (severityOfWin >= 1.5 && severityOfWin < 2) {\r\n        severityMultiplierKnights = 0.25;\r\n        severityMultiplierArchers = 0.12;\r\n      } else {\r\n        severityMultiplierKnights = 0.5;\r\n        severityMultiplierArchers = 0.25;\r\n      }\r\n\r\n      wonBattleLostKnights = (\r\n        assets[0].knights * severityMultiplierKnights\r\n      ).toFixed(0);\r\n      wonBattleLostArchers = (\r\n        assets[0].archers * severityMultiplierArchers\r\n      ).toFixed(0);\r\n\r\n      setAssets(\r\n        assets.map((asset) => {\r\n          return {\r\n            ...asset,\r\n            gold: asset.gold + earnedGold,\r\n            knights: asset.knights - wonBattleLostKnights,\r\n            archers: asset.archers - wonBattleLostArchers,\r\n          };\r\n        })\r\n      );\r\n      setWonBattleGold(earnedGold);\r\n      setLostBattleKnights(wonBattleLostKnights);\r\n      setLostBattleArchers(wonBattleLostArchers);\r\n      handleGameInfoTypeSelection(7);\r\n    }\r\n  };\r\n\r\n  const checkIfWonBattle = () => {\r\n    if (strengthOfEnemy > calculateDefenseStrength() * 2) {\r\n      //lost the game\r\n      handleGameInfoTypeSelection(6);\r\n      setGamePlay(0);\r\n      return;\r\n    }\r\n    if (strengthOfEnemy > calculateDefenseStrength()) {\r\n      // lost the battle\r\n      lossesAfterBattle(\"lost\");\r\n    } else {\r\n      // won the battle\r\n      setBattlesWon((prev) => prev + 1);\r\n      lossesAfterBattle(\"won\");\r\n    }\r\n  };\r\n\r\n  const checkIfEnemyAttackDay = () => {\r\n    if (daysTillAttack <= 2) {\r\n      setGamePlay(0);\r\n      checkIfWonBattle();\r\n    }\r\n  };\r\n\r\n  const initGameGoing = () => {\r\n    updateResources();\r\n    checkIfEnemyAttackDay();\r\n    checkIfGameWon();\r\n  };\r\n\r\n  const calculateStrengthOfEnemy = () => {\r\n    if (countDays <= 1) {\r\n      setStrengthOfEnemy(50);\r\n    } else {\r\n      let strength =\r\n        countDays * (countDays / 4).toFixed(0) +\r\n        parseInt((Math.random() * 100).toFixed(0), 10);\r\n      setStrengthOfEnemy(strength);\r\n    }\r\n  };\r\n\r\n  const calculateDaysTillAttack = () => {\r\n    var customAdditionalDays = 10;\r\n    if (countDays <= 1) {\r\n      setDaysTillAttack(50);\r\n    } else {\r\n      var daysTillAttackCalculated =\r\n        parseInt((Math.random() * 100).toFixed(0), 10) + customAdditionalDays;\r\n      setDaysTillAttack(daysTillAttackCalculated);\r\n    }\r\n  };\r\n\r\n  const startTheGame = () => {\r\n    setGamePlay(1);\r\n    setCountDays(1);\r\n    calculateStrengthOfEnemy();\r\n    calculateDaysTillAttack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (countDays <= 0) {\r\n      return;\r\n    }\r\n\r\n    if (gamePlay === 1) {\r\n      const id = setInterval(initGameGoing, timeSpeed);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [countDays, assets, gamePlay, timeSpeed]);\r\n\r\n  const handleDefaultTimeSpeed = () => {\r\n    setTimeSpeed(defaultTimeSpeed);\r\n  };\r\n\r\n  const handleDoubleTimeSpeed = () => {\r\n    setTimeSpeed(defaultTimeSpeed / 2);\r\n  };\r\n\r\n  const proceedWithTheGame = () => {\r\n    setGameInfoModal(false);\r\n    setGamePlay(1);\r\n    calculateStrengthOfEnemy();\r\n    calculateDaysTillAttack();\r\n  };\r\n\r\n  const handleCloseWelcomeModal = () => {\r\n    setShowWelcomeModal(false);\r\n    startTheGame();\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerModal gameModal\">\r\n      {showWelcomeModal && (\r\n        <React.Fragment>\r\n          {ReactDOM.createPortal(\r\n            <Backdrop onCloseModal={handleCloseWelcomeModal} />,\r\n            document.getElementById(\"backdrop-root\")\r\n          )}\r\n          {ReactDOM.createPortal(\r\n            <ModalOverlay\r\n              onCloseModal={handleCloseWelcomeModal}\r\n              playersName={props.playersName}\r\n            />,\r\n            document.getElementById(\"modal-root\")\r\n          )}{\" \"}\r\n        </React.Fragment>\r\n      )}\r\n      {showGameInfoModal && (\r\n        <div className=\"gameInfoModal\">\r\n          <GameInfoModal\r\n            selectedInfoTypeId={selectedInfoTypeId}\r\n            battlesWon={battlesWon}\r\n            warriors={assets}\r\n            onCloseModal={onCloseGameInfoModal}\r\n            productionPerDay={productionPerDay}\r\n            gamePlay={gamePlay}\r\n            onPlayAgain={props.onExitGame}\r\n            onExitGame={reload}\r\n            daysTillAttack={daysTillAttack}\r\n            strengthOfEnemy={strengthOfEnemy}\r\n            proceedGame={proceedWithTheGame}\r\n            wonBattleGold={wonBattleGold}\r\n            lostBattleGold={lostBattleGold}\r\n            lostBattleKnights={lostBattleKnights}\r\n            lostBattleArchers={lostBattleArchers}\r\n          />\r\n        </div>\r\n      )}\r\n      <NavBar\r\n        assets={assets}\r\n        days={countDays}\r\n        onSetDefaultTimeSpeed={handleDefaultTimeSpeed}\r\n        onSetDoubleTimeSpeed={handleDoubleTimeSpeed}\r\n      />\r\n      <div className=\"gameContainer\">\r\n        <div className=\"leftGameSide\">\r\n          {showBuildingUpgrade && (\r\n            <BuildingUpgradeCard\r\n              handleClickEvent={handleDeselectFieldEvent}\r\n              selectedBuildingType={selectedBuildingType}\r\n              selectedBuildingLevel={selectedBuildingLevel}\r\n              selectedBuildingGroup={selectedBuildingGroup}\r\n              selectedBuildingText={selectedBuildingText}\r\n              buildingArea={selectedBuildingArea}\r\n              onUpgrade={upgradeBuilding}\r\n              onCloseModal={onCloseUpgradeModal}\r\n              onDestroyBuilding={onDestroyBuildingHandler}\r\n              onTrainWarriors={onTrainWarriors}\r\n              assets={assets}\r\n              checkIfHasBuilding={checkIfHasBuilding}\r\n              checkForResources={checkIfEnoughResourcesToBuy}\r\n              checkForResourcesToUpgrade={checkIfEnoughResourcesToUpgrade}\r\n              checkIfCanDestroyHouse={checkIfCanDestroyHouse}\r\n              buildingTitle={selectedBuildingTitle}\r\n              building={purchases[selectedBuildingType - 1]}\r\n            />\r\n          )}\r\n          {!showPurchaseMenu && !showBuildingUpgrade && (\r\n            <TutorialBox handleClickEvent={handleDeselectFieldEvent} />\r\n          )}\r\n          {showPurchaseMenu && (\r\n            <PurchaseMenuBox\r\n              purchases={purchases}\r\n              onClose={closePurchaseBox}\r\n              onBuild={handleBuildingBuyingEvent}\r\n              onCheckIfHasBuildings={checkIfHasBuilding}\r\n              selectedBuildingArea={selectedBuildingArea}\r\n              checkForResources={checkIfEnoughResourcesToBuy}\r\n            />\r\n          )}\r\n          <div className=\"btnsCluster\">\r\n            <div className=\"d-flex flex-wrap\">\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                disabled={!isFieldSelected || hasBuilding}\r\n                onClick={() => setPurchasegroup(\"resources\")}\r\n              >\r\n                <GiAxeInStump size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                disabled={!isFieldSelected || hasBuilding}\r\n                onClick={() => setPurchasegroup(\"villageBuildings\")}\r\n              >\r\n                <GiHouse size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                disabled={!isFieldSelected || hasBuilding}\r\n                onClick={() => setPurchasegroup(\"warBuildings\")}\r\n              >\r\n                <GiSwordsEmblem size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                disabled={!isFieldSelected || hasBuilding}\r\n                onClick={() => setPurchasegroup(\"factories\")}\r\n              >\r\n                <GiFactory size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                data-delay-show=\"400\"\r\n                data-tip=\"Any enemies nearby?\"\r\n                onClick={() => handleGameInfoTypeSelection(1)}\r\n              >\r\n                <GiCrossedSwords size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                data-delay-show=\"400\"\r\n                data-tip=\"Your game status\"\r\n                onClick={() => handleGameInfoTypeSelection(2)}\r\n              >\r\n                <FaTrophy size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                data-delay-show=\"400\"\r\n                data-tip=\"Settings\"\r\n                onClick={() => handleGameInfoTypeSelection(4)}\r\n              >\r\n                <FaWhmcs size=\"1.5em\" />\r\n              </button>\r\n              <button\r\n                className=\"btn btn-dark btn-sm m-1\"\r\n                data-delay-show=\"400\"\r\n                data-tip=\"Your Stats\"\r\n                onClick={() => handleGameInfoTypeSelection(3)}\r\n              >\r\n                <BiStats size=\"1.5em\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"\">\r\n              <button\r\n                className=\"btn btn-danger btn-sm m-1 mt-5\"\r\n                onClick={props.onShowExitModal}\r\n              >\r\n                Exit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rightGameSide\">\r\n          <GameBuildingField\r\n            buildingAreas={buildingAreas}\r\n            onClickEventHandler={onClickEventHandler}\r\n          />\r\n        </div>\r\n        <div className=\"w-100\">\r\n          <p className=\"text-center\">\r\n            Strategy Game created by Gvidas Pilelis ©2021\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GameModal;\r\n","import React from \"react\";\r\n\r\nconst AskIfExitModal = ({onGetAnswer}) => {\r\n\r\n  const onSetAnswer = (answer) => {\r\n    onGetAnswer(answer);\r\n  };\r\n\r\n  return (\r\n    <div className=\"askUserBox\">\r\n      <div className=\"d-flex flex-wrap justify-content-center\">\r\n        <label className=\"p-4\">\r\n          Do you really want to exit the game? (All your achievements will be\r\n          lost)\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <button\r\n          type=\"button\"\r\n          className=\"m-4 btn btn-primary btn-sm \"\r\n          onClick={() => onSetAnswer(true)}\r\n        >\r\n          Yes\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"m-4 btn btn-dark btn-sm \"\r\n          onClick={() => onSetAnswer(false)}\r\n        >\r\n          No\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskIfExitModal;\r\n","import { useState } from \"react\";\nimport \"./App.scss\";\nimport AskNameModal from \"./components/IntroPage/AskNameModal\";\nimport IntroPage from \"./components/IntroPage/IntroPage\";\nimport GameModal from \"./components/GameModal\";\nimport AskIfExitModal from \"./components/AskIfExitModal\";\n\n\nfunction App() {\n  const [showIntroModal, setShowIntroModal] = useState(true);\n  const [showGameModal, setShowGameModal] = useState(false);\n  const [showAskNameModal, setAskNameModal] = useState(true);\n  const [playersName, setPlayersName] = useState('Nice Player');\n  const [showAskIfExitModal, setShowExitModal] = useState(false);\n  // Get/Set Player's Name\n  const setName = (player) => {\n    var name = '';\n    !player.playersName || player.playersName.trim().length === 0?name = 'Nice Player':name = player.playersName; \n    setPlayersName(name);\n  }\n\n  const handleExitGame = () => {\n    setShowIntroModal(!showIntroModal);\n    setShowGameModal(!showGameModal);\n  }\n\n  return (\n    <div className='h-100'>\n      {showAskNameModal && (\n      <div className=\"askUserSomeInfoModal\">\n        <AskNameModal onGetName={(player) => {\n          setName(player);\n          setAskNameModal(false)\n          }}/>\n      </div>)}\n      {showAskIfExitModal && (\n        <div className=\"askUserSomeInfoModal\">\n          <AskIfExitModal onGetAnswer={(answer) => {\n            setShowExitModal(false)\n            if(answer){\n              setShowIntroModal(!showIntroModal);\n              setShowGameModal(!showGameModal);\n            }\n          }} />\n        </div>)}\n      <div className=\"mainPage\">\n        {showIntroModal && (\n          <IntroPage\n            playersName={playersName}\n            onGotIt={() => {\n              setShowIntroModal(!showIntroModal);\n              setShowGameModal(!showGameModal);\n            }}\n          />\n        )}\n        {showGameModal && (\n          <GameModal\n            onShowExitModal={() => {\n              setShowExitModal(true)\n            }}\n            onExitGame={handleExitGame}\n            playersName={playersName}\n          />\n        )}\n        <div className=\"containerModal lostGameModal d-none\">\n          <button className=\"btn btn-dark btn-sm\">Start</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}